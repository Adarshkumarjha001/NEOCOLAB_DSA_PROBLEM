#include <iostream>
#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node* next;
    Node(int val){
        data=val;
        next=NULL;
}
};
void insertAtTail(Node* &head,int val){
    Node* n=new Node(val);
    if(head==NULL){
        head=n;
        return;
    }
    Node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
}
   temp->next=n;
}
void insertAthead(Node* &head,int val){
    Node* n=new Node(val);
    if(head==NULL){
        head=n;
        return;
    }
    n->next=head;
    head=n;
}
void display(Node* head){
    Node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL";
}
void deletion(Node* &head,int val){
   
    Node* temp=head;
    while(temp->next->data!=val){
        temp=temp->next;
}
     Node* todelete=temp->next;
     temp->next=temp->next->next;
     delete todelete;
}
void deleteAthead(Node* &head){
    Node* todelete=head;
    head=head->next;
    delete todelete;
}
bool isCircular(Node* head){

    Node* temp = head->next;

    while(temp!=NULL && temp!=head){
        temp=temp->next;
    }

    if(temp==head) return true;

    return false;
}
int main(){
    Node *head = NULL;
    int n;
    cin>>n;
    for(int i=0;i<n;i++){
        int ele;
        cin>>ele;
         insertAtTail(head,ele);
    }
    display(head);
    cout<<endl;
    insertAthead(head,23);
    insertAthead(head,27);
    display(head);
    cout<<endl;
    deletion(head,4);
   display(head);
    cout << endl;
    deleteAthead(head);
     display(head);
     cout<<endl;
     if(isCircular(head)){
         cout<<"True"<<endl;
     }
     else{
         cout<<"false"<<endl;
     }
}
